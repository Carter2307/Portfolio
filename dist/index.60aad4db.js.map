{"mappings":"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","sources":["assets/js/app.js","assets/js/animetitle.js"],"sourcesContent":["import {animeTitle} from './animetitle.js'\n\n/* Show/Hide navigation */\nconst showMenu = (toggleId, navId, navCloser) => {\n\tconst toggle = document.getElementById(toggleId);\n\tconst nav = document.getElementById(navId);\n\tconst navcloser = document.getElementById(navCloser);\n\n\t/* Validate if constant exists */\n\tif (toggle && nav && navcloser) {\n\t\ttoggle.addEventListener(\"click\", (e) => {\n\t\t\tnav.classList.add(\"menu-visible\");\n\t\t});\n\n\t\tnavcloser.addEventListener(\"click\", (e) => {\n\t\t\tnav.classList.remove(\"menu-visible\");\n\t\t});\n\t}\n};\n\nshowMenu(\"nav-toggle\", \"navigation\", \"nav-closer\");\n\n/* Cusor pointer*/\nif (\n\t!/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) &&\n\tdocument.querySelector(\".hdc-cursor\") !== null\n) {\n\t(function cursorPointer() {\n\t\tlet cursor = document.querySelector(\".hdc-cursor\");\n\t\tlet body = document.body;\n\n\t\tlet cursorPos = { x: 0, y: 0 };\n\n\t\tbody.addEventListener(\"mouseenter\", handleMouseEnter);\n\t\tbody.addEventListener(\"mouseleave\", handleMouseLeave);\n\t\tbody.addEventListener(\"mousemove\", handleMouseMove);\n\n\t\tfunction handleMouseEnter() {\n\t\t\tcursor.classList.add(\"-visible\");\n\t\t}\n\n\t\tfunction handleMouseLeave() {\n\t\t\tcursor.classList.remove(\"-visible\");\n\t\t}\n\n\t\tfunction handleMouseMove(event) {\n\t\t\tcursor.classList.add(\"-visible\");\n\t\t\tcursorPos.x = event.pageX;\n\t\t\tcursorPos.y = event.pageY;\n\n\t\t\tsetCursorPosition();\n\t\t}\n\n\t\tfunction setCursorPosition() {\n\t\t\tlet centerCursorPos = {\n\t\t\t\tx: cursor.getBoundingClientRect().width / 2,\n\t\t\t\ty: cursor.getBoundingClientRect().height / 2,\n\t\t\t};\n\n\t\t\tlet calcX = cursorPos.x - centerCursorPos.x - (window.scrollX ? window.scrollX : 0);\n\t\t\tlet calcY = cursorPos.y - centerCursorPos.y - (window.scrollY ? window.scrollY : 0);\n\n\t\t\tcursor.setAttribute(\"style\", `transform: translate(${calcX}px, ${calcY}px)`);\n\n\t\t\tArray.from(document.querySelectorAll(\"a\")).forEach((a) => {\n\t\t\t\ta.addEventListener(\"mouseenter\", function (e) {\n\t\t\t\t\tcursor.classList.add(\"-exclusion\");\n\t\t\t\t\tcursor.classList.add(\"-pointer\");\n\t\t\t\t});\n\n\t\t\t\ta.addEventListener(\"mouseleave\", function (e) {\n\t\t\t\t\tcursor.classList.remove(\"-exclusion\");\n\t\t\t\t\tcursor.classList.remove(\"-pointer\");\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\twindow.onresize = () => {\n\t\t\tcursorPointer();\n\t\t};\n\t})();\n}\n\n/* Gsap animation */\n\nvar options = {\n\troot: null,\n\trootMargin: \"0px\",\n\tthreshold: 0.2,\n};\n\nlet callback = (entries, observer) => {\n\tlet targets = entries.map((entry) => {\n\t\tif (entry.isIntersecting) {\n\t\t\tobserver.unobserve(entry.target);\n\t\t\treturn entry.target;\n\t\t}\n\t});\n\n\tgsap.to(targets, {\n\t\ty: 0,\n\t\topacity: 1,\n\t\tduration: 1,\n\t\tstagger: {\n\t\t\teach: 0.5,\n\t\t},\n\t});\n};\n\nvar observer = new IntersectionObserver(callback, options);\n\nlet targetobserv = document.querySelectorAll(\".grid-item\");\ntargetobserv.forEach((element) => {\n\tobserver.observe(element);\n});\n\n\n//Anime title on page load\nanimeTitle('animated-title')\n","/**\n * Anime un titre avec un effet d'apparition mot par mot\n * @param {string} selector\n */\nexport function animeTitle(selector) {\n    let title = document.querySelectorAll(`.${selector}`);\n    if (title === null) {\n        console.error(`L'élément ${selector} n'existe pas`);\n    }\n\n    title.forEach((el) => {\n        let children = Array.from(el.childNodes);\n        let elements = [];\n        children.forEach((child) => {\n            if (child.nodeType === Node.TEXT_NODE) {\n                spanify(child);\n            } else if (child.tagName === \"BR\") {\n                elements.push(child);\n            } else {\n                elements.concat(spanify(child));\n            }\n        });\n\n        //console.log(elements)\n\n        el.innerHTML = \"\";\n        elements.forEach((items) => {\n            el.appendChild(items);\n        });\n\n        Array.from(el.querySelectorAll(\"span span\")).forEach((items, k) => {\n            items.style.animationDelay = 0.2 * k + \"s\";\n        });\n\n        /**\n         * Sépare et entoure chaque élement de mon titre avec des spans\n         * - Retourne un tabelau d'éléments (entouré de span ) à plan\n         *\n         * @param {Node} child\n         * @returns {Node[]}\n         */\n        function spanify(child) {\n            const word = child.textContent.split(\" \");\n            let spans = word.map(wrapWord);\n            spans = spans\n                .map((span, index) => {\n                    if (index == spans.length - 1) return [span];\n                    return [span, document.createTextNode(\" \")];\n                })\n                .reduce((accumulator, currentValue) => {\n                    accumulator = accumulator.concat(currentValue);\n\n                    return accumulator;\n                }, []);\n\n            elements = elements.concat(spans);\n            return elements;\n        }\n        /**\n         * Entoure le mot d'une span\n         *\n         * @param {string} word\n         * @return {HTMLElement} span\n         */\n        function wrapWord(word) {\n            let span = document.createElement(\"span\");\n            let span1 = document.createElement(\"span\");\n            span1.innerHTML = word;\n            span.appendChild(span1);\n            return span;\n        }\n    });\n}\n\n"],"names":["toggleId","navId","navCloser","toggle","document","getElementById","nav","navcloser","addEventListener","e","classList","add","remove","$0b5a54e15d0ebd9f$var$showMenu","test","navigator","userAgent","querySelector","cursorPointer","cursor","body","cursorPos","x","y","event","pageX","pageY","centerCursorPos","getBoundingClientRect","width","height","calcX","window","scrollX","calcY","scrollY","setAttribute","Array","from","querySelectorAll","forEach","a","setCursorPosition","onresize","$0b5a54e15d0ebd9f$var$observer","IntersectionObserver","entries","observer","targets","map","entry","isIntersecting","unobserve","target","gsap","to","opacity","duration","stagger","each","root","rootMargin","threshold","element","observe","selector","title","console","error","el","children","childNodes","elements","spanify","child","spans","textContent","split","wrapWord","span","index","length","createTextNode","reduce","accumulator","currentValue","concat","word","createElement","span1","innerHTML","appendChild","nodeType","Node","TEXT_NODE","tagName","push","items","k","style","animationDelay","$6cc0d96ee44278bd$export$cb05fef746b36d02"],"version":3,"file":"index.60aad4db.js.map"}